{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/sw.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","navigator","window","addEventListener","serviceWorker","register","then","reg","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","error","catch"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCiBA,aAEA,kBAAAK,WAIAC,OAAAC,iBAAA,OAAA,WAKAF,UAAAG,cAAAC,SAAA,sBAAAC,KAAA,SAAAC,GAEAA,EAAAC,cAAA,WAGA,IAAAC,EAAAF,EAAAG,WAEAD,EAAAE,cAAA,WACA,OAAAF,EAAAG,OACA,IAAA,YACAX,UAAAG,cAAAS,WAKAC,QAAAC,IAAA,wCAIAD,QAAAC,IAAA,qCAEA,MAEA,IAAA,YACAD,QAAAE,MAAA,wDAKAC,MAAA,SAAAnC,GACAgC,QAAAE,MAAA,4CAAAlC","file":"sw.js.map","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-env browser */\n'use strict';\n\nif ('serviceWorker' in navigator) {\n  // Delay registration until after the page has loaded, to ensure that our\n  // precaching requests don't degrade the first visit experience.\n  // See https://developers.google.com/web/fundamentals/instant-and-offline/service-worker/registration\n  window.addEventListener('load', function() {\n    // Your service-worker.js *must* be located at the top-level directory relative to your site.\n    // It won't be able to control pages unless it's located at the same level or higher than them.\n    // *Don't* register service worker file in, e.g., a scripts/ sub-directory!\n    // See https://github.com/slightlyoff/ServiceWorker/issues/468\n    navigator.serviceWorker.register('/service-worker.js').then(function(reg) {\n      // updatefound is fired if service-worker.js changes.\n      reg.onupdatefound = function() {\n        // The updatefound event implies that reg.installing is set; see\n        // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n        var installingWorker = reg.installing;\n\n        installingWorker.onstatechange = function() {\n          switch (installingWorker.state) {\n            case 'installed':\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and the fresh content will\n                // have been added to the cache.\n                // It's the perfect time to display a \"New content is available; please refresh.\"\n                // message in the page's interface.\n                console.log('New or updated content is available.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a \"Content is cached for offline use.\" message.\n                console.log('Content is now available offline!');\n              }\n              break;\n\n            case 'redundant':\n              console.error('The installing service worker became redundant.');\n              break;\n          }\n        };\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  });\n}\n"]}